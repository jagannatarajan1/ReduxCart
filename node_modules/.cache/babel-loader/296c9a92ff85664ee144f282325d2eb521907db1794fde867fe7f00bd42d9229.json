{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst addToCartReducer = createSlice({\n  name: \"addToCartReducer\",\n  initialState: {\n    cartItem: [{\n      title: \"Test\",\n      price: 6,\n      description: \"This is a first product - amazing!\",\n      quantity: 1,\n      total: 6\n    }, {\n      title: \"Car\",\n      price: 700,\n      description: \"This is a first in the world\",\n      quantity: 1,\n      total: 700\n    }],\n    myCart: []\n  },\n  reducers: {\n    fetchaddToCart: (state, action) => {\n      action.payload.forEach(item => {\n        state.myCart.push(item);\n      });\n    },\n    addToCart: (state, action) => {\n      const existingItem = state.myCart.find(item => item.title === action.payload.title);\n      if (existingItem) {\n        existingItem.quantity += action.payload.quantity;\n        existingItem.total += action.payload.price * action.payload.quantity; // Update total based on quantity and price\n      } else {\n        state.myCart.push(action.payload);\n      }\n    },\n    removecart: (state, action) => {\n      const existingItem = state.myCart.find(item => item.title === action.payload.title);\n      if (existingItem.quantity === 1) {\n        state.myCart = state.myCart.filter(item => item.title !== action.payload.title);\n      } else {\n        existingItem.quantity--;\n        existingItem.total -= existingItem.price; // Subtract price for one item\n      }\n    }\n  }\n});\nexport const addToCartReducerActions = addToCartReducer.actions;\nexport default addToCartReducer;","map":{"version":3,"names":["createSlice","addToCartReducer","name","initialState","cartItem","title","price","description","quantity","total","myCart","reducers","fetchaddToCart","state","action","payload","forEach","item","push","addToCart","existingItem","find","removecart","filter","addToCartReducerActions","actions"],"sources":["D:/Redux_practiseCart/src/components/Cart/addToCartReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst addToCartReducer = createSlice({\r\n  name: \"addToCartReducer\",\r\n  initialState: {\r\n    cartItem: [\r\n      {\r\n        title: \"Test\",\r\n        price: 6,\r\n        description: \"This is a first product - amazing!\",\r\n        quantity: 1,\r\n        total: 6,\r\n      },\r\n      {\r\n        title: \"Car\",\r\n        price: 700,\r\n        description: \"This is a first in the world\",\r\n        quantity: 1,\r\n        total: 700,\r\n      },\r\n    ],\r\n    myCart: [],\r\n  },\r\n  reducers: {\r\n    fetchaddToCart: (state, action) => {\r\n      action.payload.forEach((item) => {\r\n        state.myCart.push(item);\r\n      });\r\n    },\r\n    addToCart: (state, action) => {\r\n      const existingItem = state.myCart.find(\r\n        (item) => item.title === action.payload.title\r\n      );\r\n      if (existingItem) {\r\n        existingItem.quantity += action.payload.quantity;\r\n        existingItem.total += action.payload.price * action.payload.quantity; // Update total based on quantity and price\r\n      } else {\r\n        state.myCart.push(action.payload);\r\n      }\r\n    },\r\n    removecart: (state, action) => {\r\n      const existingItem = state.myCart.find(\r\n        (item) => item.title === action.payload.title\r\n      );\r\n\r\n      if (existingItem.quantity === 1) {\r\n        state.myCart = state.myCart.filter(\r\n          (item) => item.title !== action.payload.title\r\n        );\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.total -= existingItem.price; // Subtract price for one item\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const addToCartReducerActions = addToCartReducer.actions;\r\nexport default addToCartReducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,gBAAgB,GAAGD,WAAW,CAAC;EACnCE,IAAI,EAAE,kBAAkB;EACxBC,YAAY,EAAE;IACZC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,MAAM;MACbC,KAAK,EAAE,CAAC;MACRC,WAAW,EAAE,oCAAoC;MACjDC,QAAQ,EAAE,CAAC;MACXC,KAAK,EAAE;IACT,CAAC,EACD;MACEJ,KAAK,EAAE,KAAK;MACZC,KAAK,EAAE,GAAG;MACVC,WAAW,EAAE,8BAA8B;MAC3CC,QAAQ,EAAE,CAAC;MACXC,KAAK,EAAE;IACT,CAAC,CACF;IACDC,MAAM,EAAE;EACV,CAAC;EACDC,QAAQ,EAAE;IACRC,cAAc,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACjCA,MAAM,CAACC,OAAO,CAACC,OAAO,CAAEC,IAAI,IAAK;QAC/BJ,KAAK,CAACH,MAAM,CAACQ,IAAI,CAACD,IAAI,CAAC;MACzB,CAAC,CAAC;IACJ,CAAC;IACDE,SAAS,EAAEA,CAACN,KAAK,EAAEC,MAAM,KAAK;MAC5B,MAAMM,YAAY,GAAGP,KAAK,CAACH,MAAM,CAACW,IAAI,CACnCJ,IAAI,IAAKA,IAAI,CAACZ,KAAK,KAAKS,MAAM,CAACC,OAAO,CAACV,KAC1C,CAAC;MACD,IAAIe,YAAY,EAAE;QAChBA,YAAY,CAACZ,QAAQ,IAAIM,MAAM,CAACC,OAAO,CAACP,QAAQ;QAChDY,YAAY,CAACX,KAAK,IAAIK,MAAM,CAACC,OAAO,CAACT,KAAK,GAAGQ,MAAM,CAACC,OAAO,CAACP,QAAQ,CAAC,CAAC;MACxE,CAAC,MAAM;QACLK,KAAK,CAACH,MAAM,CAACQ,IAAI,CAACJ,MAAM,CAACC,OAAO,CAAC;MACnC;IACF,CAAC;IACDO,UAAU,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAMM,YAAY,GAAGP,KAAK,CAACH,MAAM,CAACW,IAAI,CACnCJ,IAAI,IAAKA,IAAI,CAACZ,KAAK,KAAKS,MAAM,CAACC,OAAO,CAACV,KAC1C,CAAC;MAED,IAAIe,YAAY,CAACZ,QAAQ,KAAK,CAAC,EAAE;QAC/BK,KAAK,CAACH,MAAM,GAAGG,KAAK,CAACH,MAAM,CAACa,MAAM,CAC/BN,IAAI,IAAKA,IAAI,CAACZ,KAAK,KAAKS,MAAM,CAACC,OAAO,CAACV,KAC1C,CAAC;MACH,CAAC,MAAM;QACLe,YAAY,CAACZ,QAAQ,EAAE;QACvBY,YAAY,CAACX,KAAK,IAAIW,YAAY,CAACd,KAAK,CAAC,CAAC;MAC5C;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMkB,uBAAuB,GAAGvB,gBAAgB,CAACwB,OAAO;AAC/D,eAAexB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}